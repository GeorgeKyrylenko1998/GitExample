//
//  UserInfoViewController.swift
//  githubExanple
//
//  Created George Kyrylenko on 12/16/18.
//  Copyright © 2018 George Kyrylenko. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class UserInfoViewController: UIViewController, UserInfoViewProtocol, EditUserDelegate {
    
    @IBOutlet weak var userTableView: UITableView!
    var user: UserModel?
    
    var presenter: UserInfoPresenterProtocol?
    
    override func viewDidLoad() {
        super.viewDidLoad()
        makeNavBar()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        presenter?.getUserData()
    }
    func makeNavBar(){
        self.title = "Profile"
        let logOutItem = UIBarButtonItem(title: "logOut", style: .plain, target: self, action: #selector(logOut))
        let changeProfileItem = UIBarButtonItem(title: "Edit", style: .plain, target: self, action: #selector(editInfo))
        navigationItem.leftBarButtonItems = [logOutItem]
        navigationItem.rightBarButtonItems = [changeProfileItem]
    }
    
    @objc func logOut(){
        presenter?.logOut()
        let appDelegate = UIApplication.shared.delegate
        guard let window = appDelegate?.window! else {return}
        UIView.transition(with: window, duration: 0.3, options: .transitionFlipFromLeft, animations: {
            window.rootViewController = LoginRouter.createModule()
        }, completion: nil)
    }
    
    @objc func editInfo(){
        let view = EditInfoRouter.createModule()
        view.delegate = self
        self.present(view, animated: true)
    }
    
    func makeHeader(user: UserModel){
        let header = HeaderView(frame: CGRect(x: 0, y: 0, width: self.view.frame.width, height: 250))
        header.setData(user: user)
        userTableView.tableHeaderView = header
    }
    
    func setUserData(user: UserModel) {
        self.user = user
        makeHeader(user: user)
        userTableView.reloadData()
    }
    
    func closeView(view: UIViewController) {
        view.dismiss(animated: true, completion: nil)
    }
}

extension UserInfoViewController: UITableViewDelegate, UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 5
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = UITableViewCell(style: .subtitle, reuseIdentifier: nil)
        cell.selectionStyle = .none
        switch indexPath.row {
        case 0:
            cell.textLabel?.text = "ID:"
            cell.detailTextLabel?.text = String(user?.id ?? -1)
        case 1:
            cell.textLabel?.text = "E-mail:"
            cell.detailTextLabel?.text = user?.email ?? "NONE"
        case 2:
            cell.textLabel?.text = "Location:"
            cell.detailTextLabel?.text = user?.location
        case 3:
            cell.textLabel?.text = "URL:"
            cell.detailTextLabel?.text = user?.htmlURL
        case 4:
            cell.textLabel?.text = "Company:"
            cell.detailTextLabel?.text = user?.company ?? "NONE"
        default:
            break
        }
        
        return cell
    }
}
