//
//  EditInfoViewController.swift
//  githubExanple
//
//  Created George Kyrylenko on 12/17/18.
//  Copyright © 2018 George Kyrylenko. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import RxSwift
import RxCocoa

class EditInfoViewController: SuperViewController, EditInfoViewProtocol, EditableCellDelegate{
    
    
    @IBOutlet weak var editInfoTableView: UITableView!
    weak var delegate: EditUserDelegate?
    let editCell = "EditableCell"
	var presenter: EditInfoPresenterProtocol?
    var user: EditUser?
    
	override func viewDidLoad() {
        super.viewDidLoad()
        registrNibs()
        getUser()
    }
    
    override var preferredStatusBarStyle: UIStatusBarStyle {
        return .lightContent
    }
    
    func getUser(){
        guard let userInfo = presenter?.getUser() else {
            delegate?.closeView(view: self)
            return
        }
        
        if user == nil{
            user = EditUser()
        }
        
        user?.name = userInfo.name
        user?.email = userInfo.email
        user?.blog = userInfo.blog
        user?.company = userInfo.company
        user?.location = userInfo.location
        
        editInfoTableView.reloadData()
    }
    
    func registrNibs(){
        editInfoTableView.register(UINib(nibName: editCell, bundle: nil), forCellReuseIdentifier: editCell)
    }
    
    @IBAction func closeView(_ sender: Any) {
        delegate?.closeView(view: self)
    }
    @IBAction func saveInfo(_ sender: Any) {
        guard let newUser = user else {return}
        presenter?.updateUser(user: newUser)
    }
    func showMessage(message: String) {
        alertOK(text: message)
    }
    
    func updateOk() {
        delegate?.closeView(view: self)
    }
    
    
    func editText(type: CellTypes, text: String) {
        switch type {
        case .name:
            user?.name = text
        case .email:
            user?.email = text
        case .blog:
            user?.blog = text
        case .company:
            user?.company = text
        case .location:
            user?.location = text
        }
    }
    
}

extension EditInfoViewController: UITableViewDataSource, UITableViewDelegate{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 5
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: editCell, for: indexPath) as! EditableCell
        cell.delegate = self
        switch indexPath.row {
        case 0:
            cell.title.text = "Name:"
            cell.type = .name
            if let text = user?.name{
                cell.editText.text = text
            }
        case 1:
            cell.title.text = "E-mail:"
            cell.type = .email
            if let text = user?.email{
                cell.editText.text = text
            }
        case 2:
            cell.title.text = "Blog:"
            cell.type = .blog
            if let text = user?.blog{
                cell.editText.text = text
            }
        case 3:
            cell.title.text = "Company:"
            cell.type = .company
            if let text = user?.company{
                cell.editText.text = text
            }
        case 4:
            cell.title.text = "Location:"
            cell.type = .location
            if let text = user?.location{
                cell.editText.text = text
            }
        default:
            break
        }
        return cell
    }
}

enum CellTypes{
    case name
    case email
    case blog
    case company
    case location
}

protocol EditUserDelegate: class {
    func closeView(view: UIViewController)
}
