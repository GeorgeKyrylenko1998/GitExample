//
//  EditInfoInteractor.swift
//  githubExanple
//
//  Created George Kyrylenko on 12/17/18.
//  Copyright © 2018 George Kyrylenko. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit
import RxSwift
import Moya

class EditInfoInteractor: EditInfoInteractorProtocol {
    weak var presenter: EditInfoPresenterProtocol?
    
    let disposeBag = DisposeBag()
    
    func updateUser(user: EditUser) {
        let userManager = UserManager()
        let userDef = CurrentUserDefaultsManager()
        guard let key = userDef.getUserKey() else {return}
        userManager.updateUser(key: key, user: user).subscribe(onNext: {[weak self] (resp) in
            self?.presenter?.updateOk()
        }, onError: {[weak self] (error) in
            if let moyaError = error as? Moya.MoyaError{
                if moyaError.response?.statusCode == 401{
                    fastLogOut()
                    return
                }
            }
            self?.presenter?.showMessage(message: error.localizedDescription)
        }, onCompleted: nil, onDisposed: nil).disposed(by: disposeBag)
    }
    
    func getUser() -> UserModel? {
        let userDef = CurrentUserDefaultsManager()
        return userDef.getUserInfo()
    }
}
